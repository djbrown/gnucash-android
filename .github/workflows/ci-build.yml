name: CI Build

on:
  push: {}
  pull_request:
    branches: [master]

env:
  RUN_QUALIFIER: ${{github.run_number}}-${{github.run_attempt}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2
      - name: Prepare Google Services
        run: echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Build Application APK
        run: ./gradlew assembleDevelopmentDebug
      - name: Rename Application APK
        run: cp app/build/outputs/apk/development/debug/*.apk application-$RUN_QUALIFIER.apk
      - name: Upload Application APK
        uses: actions/upload-artifact@v3
        with:
          name: application-apk
          path: application-${{env.RUN_QUALIFIER}}.apk
          if-no-files-found: error

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2
      - name: Prepare Google Services
        run: echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Run Unit Tests
        run: ./gradlew testDevelopmentDebugUnitTest
      - name: Unit Test Summary
        uses: test-summary/action@v2
        if: always()
        with:
          paths: app/build/test-results/testDevelopmentDebugUnitTest/TEST-*.xml
      - name: Upload Unit Test Results for Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: unit-test-results
          path: app/build/test-results/testDevelopmentDebugUnitTest/TEST-*.xml
          if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2
      - name: Prepare Google Services
        run: echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Run Linter
        run: ./gradlew lintDevelopmentDebug

  instrumentation-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Prepare Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
      - name: Prepare Gradle
        uses: gradle/gradle-build-action@v2
      - name: Prepare Google Services
        run: echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Build Instrumentation APK
        run: ./gradlew assembleDevelopmentDebugAndroidTest
      - name: Rename Instrumentation APK
        run: cp app/build/outputs/apk/androidTest/development/debug/*.apk instrumentation-$RUN_QUALIFIER.apk
      - name: Upload Instrumentation APK
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation-apk
          path: instrumentation-${{env.RUN_QUALIFIER}}.apk
          if-no-files-found: error

  instrumentation-test:
    runs-on: ubuntu-latest
    needs: [build, instrumentation-build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Download Application APK
        uses: actions/download-artifact@v3
        with:
          name: application-apk
      - name: Download Instrumentation APK
        uses: actions/download-artifact@v3
        with:
          name: instrumentation-apk
      - name: Login to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_AUTH }}
      - name: Set up GCloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Run Instrumentation Tests
        id: run-instrumentation-test
        run: . ./instrumentation-test.sh
        env:
          APPLICATION_APK: application-${{env.RUN_QUALIFIER}}.apk
          INSTRUMENTATION_APK: instrumentation-${{env.RUN_QUALIFIER}}.apk
          GCLOUD_BUCKET: ${{ vars.GCLOUD_BUCKET }}
          GCLOUD_BUCKET_DIRECTORY: ${{env.RUN_QUALIFIER}}/redfin-30-en-portrait
          LOCAL_DIRECTORY: instrumentation-test-results
      - name: Fetch Instrumentation Test Results
        run: mkdir instrumentation-test-results && gsutil cp -r gs://${{vars.GCLOUD_BUCKET}}/${{env.RUN_QUALIFIER}} instrumentation-test-results
      - name: Instrumentation Test Summary
        uses: test-summary/action@v2
        with:
          paths: instrumentation-test-results/*.xml
      - name: Upload Instrumentation Test Results for Report
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation-test-results
          path: instrumentation-test-results
          if-no-files-found: error
      - name: Assert Instrumentation Tests Success
        run: if ${{steps.run-instrumentation-test.outputs.test_success}} -ne 'true'; then exit 1; fi
